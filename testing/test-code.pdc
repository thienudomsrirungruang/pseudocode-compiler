// Comments and blank lines

// /// ////

////



// Basic Types + OUTPUT
OUTPUT 2 // inline comment
OUTPUT 1337
OUTPUT 3.14159265
OUTPUT 3203.1984
OUTPUT 235.
OUTPUT .4
OUTPUT -4
OUTPUT -7.3

OUTPUT "hello world"
OUTPUT ""
OUTPUT 'a'
OUTPUT '2'

OUTPUT TRUE
OUTPUT FALSE

// Unary Operations
OUTPUT -3
OUTPUT +4
OUTPUT NOT TRUE
OUTPUT NOT FALSE
OUTPUT +++++--+3
OUTPUT ---+3
OUTPUT NOT NOT NOT TRUE

// Binary Operations
OUTPUT 2+3
OUTPUT 2 + 3
OUTPUT 2     + 2
OUTPUT 4 - 2
OUTPUT 3 MOD 2
OUTPUT 8 DIV 3
OUTPUT +-3 * -2

// BIDMAS
OUTPUT 5 / 2 * 3
OUTPUT 8 + 2 - 3 + 4
OUTPUT 6 - 3 - ((2 - 3) * -4)
OUTPUT 3 * 4 / 2 - 3
OUTPUT 3 - 4 * 2 / 3
OUTPUT -4 --4 * (2 * 3)

// Binary Boolean Operations
OUTPUT "hi" = "hi"
OUTPUT 3 = 3.0
OUTPUT 4 = 4
OUTPUT 2=2
OUTPUT "hi" = "hi "
OUTPUT 3 <> 'c'
OUTPUT 3 > 2
OUTPUT 3 >= 2
OUTPUT 3 >= 3
OUTPUT 3 > 3
OUTPUT 3 < 2
OUTPUT 3 <= 4
OUTPUT 3 <= 3
OUTPUT 4>3
OUTPUT 9>   2
OUTPUT 4 < 2 OR 3 < 10
OUTPUT 4 < 2 OR 3 < 2
OUTPUT TRUE AND TRUE
OUTPUT TRUE AND FALSE
OUTPUT FALSE AND FALSE
OUTPUT TRUE OR TRUE
OUTPUT FALSE OR TRUE
OUTPUT FALSE OR FALSE
OUTPUT 4 < 2 OR TRUE
OUTPUT 4 < 2 OR FALSE

// Different from python: OR takes priority over AND (but should use brackets anyway)
OUTPUT TRUE OR FALSE AND FALSE OR FALSE
OUTPUT (TRUE OR FALSE) AND (FALSE OR FALSE)
OUTPUT TRUE OR FALSE AND FALSE
OUTPUT (TRUE OR FALSE) AND FALSE

// Variables
DECLARE a : INTEGER
DECLARE b : REAL
DECLARE Hello : STRING
DECLARE MyChar : CHAR
DECLARE bOoLeAnVaR1 : BOOLEAN
a ← 3
b ← 4.2
Hello ← "Hello"
MyChar ← 'c'
bOoLeAnVaR1 ← TRUE
OUTPUT a
OUTPUT b
b ← 4.5
OUTPUT b
OUTPUT a + 2
OUTPUT a + b
OUTPUT bOoLeAnVaR1 AND bOoLeAnVaR1
OUTPUT Hello
OUTPUT MyChar

// IF statements
IF TRUE THEN
    OUTPUT "foo"
ENDIF
IF TRUE
  THEN
    OUTPUT "bar"
ENDIF
IF 2 = 3
  THEN
    OUTPUT "baz"
ENDIF
// Nested + empty IF
IF TRUE
  THEN
    OUTPUT 1
    IF TRUE
      THEN
        OUTPUT 2
    ENDIF
    IF FALSE
      THEN
    ENDIF
ENDIF
IF TRUE
  THEN
ENDIF

// ELSE keyword
DECLARE s : STRING
s ← "bar"
IF s = "foo"
  THEN
    OUTPUT "s is foo"
  ELSE
    OUTPUT "s is not foo"
ENDIF

// STRING manip
OUTPUT "foo",'b',TRUE,19,.3
OUTPUT "somebody"&'o'&"nce"

// WHILE loops
DECLARE x : INTEGER
x ← 1
DECLARE y : INTEGER
y ← 1
WHILE x < 50
  DO
    OUTPUT x
    DECLARE temp : INTEGER
    temp ← y
    y ← x + y
    x ← temp
ENDWHILE

// FOR loops

FOR i ← 0 TO 4
    OUTPUT i
ENDFOR i

FOR i ← 0 TO 4 STEP 2
    OUTPUT i
ENDFOR i

OUTPUT "Done!"
